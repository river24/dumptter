#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require 'time'
require 'rubygems'
require 'active_record'
require 'sqlite3'

DUMPTTER_DIR="#{ENV['HOME']}/.dumptter"
YAML_FILE="#{DUMPTTER_DIR}/config.yaml"
OLD_DB_FILE="#{DUMPTTER_DIR}/dumptter.db"
NEW_DB_FILE="#{DUMPTTER_DIR}/dumptter2.db"

errors_array = []

def check_errors(errors_array)
  if errors_array.size > 0
    errors_array.each{|error|
      print "Error: #{error}\n"
    }
    exit
  end
end

if FileTest.exist?(DUMPTTER_DIR)
  if FileTest::directory?(DUMPTTER_DIR)
  else
    errors_array << "'#{DUMPTTER_DIR}/' is not a directory."
  end
else
  Dir.mkdir("#{DUMPTTER_DIR}")
end
check_errors(errors_array)

if FileTest.exist?(OLD_DB_FILE)
  if FileTest::file?(OLD_DB_FILE)
  else
    errors_array << "'#{OLD_DB_FILE}' is not a file."
  end
end
check_errors(errors_array)

ActiveRecord::Base.establish_connection(
  :adapter => 'sqlite3',
  :database  => OLD_DB_FILE
)

class Status < ActiveRecord::Base
end

tweets_array = []

Status.all.each do |old_tweet|
  tweet = {}
  tweet['id'] = old_tweet.status_id
  tweet['text'] = old_tweet.status_text
  tweet['created_at'] = old_tweet.status_at
  tweets_array.push(tweet)
end

ActiveRecord::Base.establish_connection(
  :adapter => 'sqlite3',
  :database  => NEW_DB_FILE
)

ActiveRecord::Migrator.migrate('db/migrate', ENV["VERSION"] ? ENV["VERSION"].to_i : nil)

class Tweet < ActiveRecord::Base
end

tweets_array.each do |tweet|
  tmp_tweet = Tweet.where(:id => tweet['id']).first
  if tmp_tweet.nil?
    Tweet.create(
      :id => tweet['id'],
      :text => tweet['text'],
      :json => "{}",
      :retweeted => false,
      :posted_at => tweet['created_at'],
      :dumptter_version => 1
    )
  end
end

